import std/tables
import std/strformat
import std/strutils

import ./lib/conversions
import ./lib/globals

const
  TL_CORNER: string = "\u250c"
  BL_CORNER: string = "\u2514"
  TR_CORNER: string = "\u2510"
  BR_CORNER: string = "\u2518"

  V_BAR: string = "\u2502"
  H_BAR: string = "\u2500"

  T_TBAR: string = "\u252c"
  L_TBAR: string = "\u251c"
  R_TBAR: string = "\u2524"
  B_TBAR: string = "\u2534"

  CROSS_BAR: string = "\u253c"

  COLOR_RESET: string = "\e[0m"
  COLOR_RED: string = "\e[31m"
  COLOR_GREEN: string = "\e[32m"
  COLOR_YELLOW: string = "\e[33m"
  COLOR_CYAN: string = "\e[36m"

# Import each problem
{{ PROBLEM_IMPORT }}

# Store the results of each solution
var results: OrderedTable[int, (string, int64)]

# Run each solution
for id in SOLUTIONS.keys:
  stdout.write &"\rRunning problem {id}"
  results[id] = SOLUTIONS[id]()
echo ""

# Get max string length
var maxStringLength = 0
for id in results.keys:
  let str = results[id][0]
  if str.len > maxStringLength:
    maxStringLength = str.len

# helper functions
func rowSep(resColWidth: int): string =
  result = L_TBAR
  result &= H_BAR.repeat(3)
  result &= CROSS_BAR
  result &= H_BAR.repeat(resColWidth)
  result &= CROSS_BAR
  result &= H_BAR.repeat(10)
  result &= R_TBAR

func headSep(resColWidth: int): string =
  result = TL_CORNER
  result &= H_BAR.repeat(3)
  result &= T_TBAR
  result &= H_BAR.repeat(resColWidth)
  result &= T_TBAR
  result &= H_BAR.repeat(10)
  result &= TR_CORNER

func footSep(resColWidth: int): string =
  result = BL_CORNER
  result &= H_BAR.repeat(3)
  result &= B_TBAR
  result &= H_BAR.repeat(resColWidth)
  result &= B_TBAR
  result &= H_BAR.repeat(10)
  result &= BR_CORNER

proc echoHeader(resColWidth: int): void =
  echo headSep(resColWidth)

  var header: string = V_BAR
  header &= "ID".center(3) & V_BAR
  header &= "Result".center(resColWidth) & V_BAR
  header &= "Time".center(10) & V_BAR

  echo header

proc echoFooter(resColWidth: int): void =
  echo footSep(resColWidth)

proc echoResult(resColWidth: int, id: int): void =
  echo rowSep(resColWidth)

  var row: string = V_BAR
  row &= ($id).align(3) & V_BAR
  row &= COLOR_CYAN & results[id][0].align(resColWidth) & COLOR_RESET & V_BAR

  let span = results[id][1]
  var color = COLOR_GREEN
  if span >= 1_000_000_000'i64:
    color = COLOR_RED
  elif span >= 100_000_000'i64:
    color = COLOR_YELLOW

  row &= color & span.toHumanTime.align(10) & COLOR_RESET & V_BAR

  echo row

# Output the results
echoHeader(maxStringLength)
for id in results.keys:
  echoResult(maxStringLength, id)
echoFooter(maxStringLength)
